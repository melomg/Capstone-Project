apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 27

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }

    testBuildType "debug"

    signingConfigs {
        free {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    defaultConfig {
        applicationId "com.projects.melih.wonderandwander"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resValue "string", "app_name", "WonderAndWander"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        buildConfigField("String", "BASE_URL", '"https://api.teleport.org/api/"')
    }

    buildTypes {
        debug {
            signingConfig null
            debuggable true
        }
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        free {
            signingConfig signingConfigs.free
            dimension "default"
            applicationIdSuffix ".free"
        }
        paid {
            dimension "default"
            applicationIdSuffix ".paid"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

ext {
    supportLibrary = "27.1.1"
    aac = "1.1.1"
    room = "1.1.1"
    playServices = "15.0.1"
    dagger = "2.15"
    retrofit = "2.3.0"
    glide = "4.6.1"
    leakcanary = "1.5.4"
}

dependencies {
    // Support
    implementation "com.android.support:appcompat-v7:${supportLibrary}"
    implementation "com.android.support:support-annotations:${supportLibrary}"
    implementation "com.android.support:design:${supportLibrary}"
    implementation "com.android.support:recyclerview-v7:${supportLibrary}"
    implementation "com.android.support:cardview-v7:${supportLibrary}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    // Android Architecture Components
    implementation "android.arch.lifecycle:extensions:${aac}"
    implementation 'android.arch.lifecycle:runtime:1.1.1'
    annotationProcessor "android.arch.lifecycle:compiler:${aac}"

    // Room components
    implementation "android.arch.persistence.room:runtime:${room}"
    annotationProcessor "android.arch.persistence.room:compiler:${room}"
    androidTestImplementation "android.arch.persistence.room:testing:${room}"

    // Dagger
    implementation "com.google.dagger:dagger:${dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${dagger}"

    // Dagger.Android
    implementation "com.google.dagger:dagger-android-support:${dagger}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${dagger}"

    // Network
    implementation "com.squareup.retrofit2:converter-gson:${retrofit}"
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // Image and Video
    implementation "com.github.bumptech.glide:glide:${glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glide}"
    implementation 'com.google.android.exoplayer:exoplayer:2.8.0'

    // Utils
    implementation 'com.jakewharton.timber:timber:4.6.0'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanary}"

    // Maps
    implementation "com.google.android.gms:play-services-maps:$playServices"
    implementation "com.google.android.gms:play-services-places:$playServices"

    // Firebase Auth
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.firebaseui:firebase-ui-auth:4.0.0'

    // Firebase Database
    implementation 'com.google.firebase:firebase-database:16.0.1'

    // Firebase Ads
    freeImplementation "com.google.firebase:firebase-ads:$playServices"

    // Chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
apply plugin: 'com.google.gms.google-services'

apply plugin: 'org.sonarqube'

sonarqube {
    properties {
        property "sonar.projectName", "WonderAndWander (Java Lint)"
        property "sonar.projectKey", "wonderandwander.java.lint"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.sourceEncoding", "UTF-8"
        property 'sonar.language', 'java'
    }
}